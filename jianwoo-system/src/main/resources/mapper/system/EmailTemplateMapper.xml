<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jianwoo.system.mapper.EmailTemplateMapper">

    <resultMap type="EmailTemplate" id="EmailTemplateResult">
        <result property="emailTplCode"    column="email_tpl_code"    />
        <result property="desc"    column="desc"    />
        <result property="subject"    column="subject"    />
        <result property="content"    column="content"    />
        <result property="testJsonData"    column="test_json_data"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
 `email_tpl_code`, `desc`, `subject`, `content`, `test_json_data`, `status`, `create_by`, `create_time`, `update_by`, `update_time`, `remark`    </sql>

    <sql id="selectEmailTemplateVo">
        select `email_tpl_code`, `desc`, `subject`, `content`, `test_json_data`, `status`, `create_by`, `create_time`, `update_by`, `update_time`, `remark` from email_template
    </sql>

    <select id="selectByExample" parameterType="EmailTemplateExample" resultMap="EmailTemplateResult">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from email_template
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <include refid="MySQLDialectSuffix" />
    </select>

    <delete id="deleteByExample" parameterType="EmailTemplateExample">
        delete from email_template
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" keyColumn="OID" keyProperty="oid" parameterType="EmailTemplate" useGeneratedKeys="true">
        insert into email_template (
                `email_tpl_code`,
                `desc`,
                `subject`,
                `content`,
                `test_json_data`,
                `status`,
                `create_by`,
                `create_time`,
                `update_by`,
                `update_time`,
                `remark`
        )
        values (
                #{emailTplCode},
                #{desc},
                #{subject},
                #{content},
                #{testJsonData},
                #{status},
                #{createBy},
                #{createTime},
                #{updateBy},
                #{updateTime},
                #{remark}
               )
    </insert>
    <select id="countByExample" parameterType="EmailTemplateExample" resultType="java.lang.Long">
        select count(*) from email_template
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update email_template
        <set>
                <if test="record.emailTplCode != null">
                    `email_tpl_code` = #{record.emailTplCode},
                </if>
                <if test="record.desc != null">
                    `desc` = #{record.desc},
                </if>
                <if test="record.subject != null">
                    `subject` = #{record.subject},
                </if>
                <if test="record.content != null">
                    `content` = #{record.content},
                </if>
                <if test="record.testJsonData != null">
                    `test_json_data` = #{record.testJsonData},
                </if>
                <if test="record.status != null">
                    `status` = #{record.status},
                </if>
                <if test="record.createBy != null">
                    `create_by` = #{record.createBy},
                </if>
                <if test="record.createTime != null">
                    `create_time` = #{record.createTime},
                </if>
                <if test="record.updateBy != null">
                    `update_by` = #{record.updateBy},
                </if>
                <if test="record.updateTime != null">
                    `update_time` = #{record.updateTime},
                </if>
                <if test="record.remark != null">
                    `remark` = #{record.remark},
                </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update email_template
        set
            `email_tpl_code` = #{emailTplCode},
            `desc` = #{desc},
            `subject` = #{subject},
            `content` = #{content},
            `test_json_data` = #{testJsonData},
            `status` = #{status},
            `create_by` = #{createBy},
            `create_time` = #{createTime},
            `update_by` = #{updateBy},
            `update_time` = #{updateTime},
            `remark` = #{remark}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKey" parameterType="EmailTemplate">
        update email_template
        set
                `desc` = #{desc},
                `subject` = #{subject},
                `content` = #{content},
                `test_json_data` = #{testJsonData},
                `status` = #{status},
                `create_by` = #{createBy},
                `create_time` = #{createTime},
                `update_by` = #{updateBy},
                `update_time` = #{updateTime},
                `remark` = #{remark}
        where email_tpl_code = #{emailTplCode}
    </update>
    <sql id="MySQLDialectSuffix">
        <if test="start != null and rows != null">
            <![CDATA[  limit #{start},#{rows} ]]>
        </if>
    </sql>

    <select id="selectList" parameterType="EmailTemplate" resultMap="EmailTemplateResult">
        <include refid="selectEmailTemplateVo"/>
        <where>
            <if test="emailTplCode != null  and emailTplCode != ''"> and `email_tpl_code`= #{emailTplCode}</if>
            <if test="desc != null  and desc != ''"> and `desc`= #{desc}</if>
            <if test="subject != null  and subject != ''"> and `subject`= #{subject}</if>
            <if test="content != null  and content != ''"> and `content`= #{content}</if>
            <if test="testJsonData != null  and testJsonData != ''"> and `test_json_data`= #{testJsonData}</if>
            <if test="status != null  and status != ''"> and `status`= #{status}</if>
        </where>
    </select>

    <select id="selectByPrimaryKey" parameterType="String" resultMap="EmailTemplateResult">
        <include refid="selectEmailTemplateVo"/>
        where email_tpl_code = #{emailTplCode}
    </select>

    <insert id="insertSelective" parameterType="EmailTemplate">
        insert into email_template
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="emailTplCode != null">`email_tpl_code`,</if>
            <if test="desc != null">`desc`,</if>
            <if test="subject != null">`subject`,</if>
            <if test="content != null">`content`,</if>
            <if test="testJsonData != null">`test_json_data`,</if>
            <if test="status != null">`status`,</if>
            <if test="createBy != null">`create_by`,</if>
            <if test="createTime != null">`create_time`,</if>
            <if test="updateBy != null">`update_by`,</if>
            <if test="updateTime != null">`update_time`,</if>
            <if test="remark != null">`remark`,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="emailTplCode != null">#{emailTplCode},</if>
            <if test="desc != null">#{desc},</if>
            <if test="subject != null">#{subject},</if>
            <if test="content != null">#{content},</if>
            <if test="testJsonData != null">#{testJsonData},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="EmailTemplate">
        update email_template
        <trim prefix="SET" suffixOverrides=",">
            <if test="desc != null">`desc` = #{desc},</if>
            <if test="subject != null">`subject` = #{subject},</if>
            <if test="content != null">`content` = #{content},</if>
            <if test="testJsonData != null">`test_json_data` = #{testJsonData},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="createBy != null">`create_by` = #{createBy},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateBy != null">`update_by` = #{updateBy},</if>
            <if test="updateTime != null">`update_time` = #{updateTime},</if>
            <if test="remark != null">`remark` = #{remark},</if>
        </trim>
        where email_tpl_code = #{emailTplCode}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="String">
        delete from email_template where email_tpl_code = #{emailTplCode}
    </delete>

    <delete id="deleteByPrimaryKeys" parameterType="String">
        delete from email_template where email_tpl_code in
        <foreach item="emailTplCode" collection="array" open="(" separator="," close=")">
            #{emailTplCode}
        </foreach>
    </delete>
</mapper>