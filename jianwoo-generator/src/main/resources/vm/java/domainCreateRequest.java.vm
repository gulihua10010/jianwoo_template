package ${packageName}.web.dto.${businessName};

import java.io.Serializable;
import java.util.Date;
#foreach ($import in $importList)
import ${import};
#end

import com.fasterxml.jackson.annotation.JsonFormat;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.validation.constraints.Max;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Data;
import lombok.ToString;

/**
 * ${functionName}对象 ${tableName}
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Data
@ToString
@Schema(description = "${functionName}创建请求对象")
public class ${ClassName}CreateRequest implements Serializable
{
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
    #if(!$table.isSuperColumn($column.javaField))
        #set($parentheseIndex=$column.columnComment.indexOf("("))
        #if($parentheseIndex != -1)
            #set($comment=$column.columnComment.substring(0, $parentheseIndex))
        #else
            #set($comment=$column.columnComment)
        #end
    #if($column.insert)
    /** $column.columnComment */
    #if($column.required)
    #if($column.javaType == 'String')
    @NotBlank(message = "$column.columnComment不能为空")
    #else
    @NotNull(message = "$column.columnComment不能为空")
    #end
    #end
    #if($column.javaType == 'String')
    #if($column.columnLength > 0)
    @Size(max = $column.columnLength, message = "$comment长度不能超过$column.columnLength")
    #end
    #elseif($column.javaType == 'BigDecimal' || $column.javaType == 'Long' || $column.javaType == 'Integer')
    @Max(value = $table.getLength($column.javaType, $column.columnLength)L, message = "$comment值不能超过$table.getLength($column.javaType, $column.columnLength)")
    #end
    #if($column.javaType == 'Date')
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    #end
    @Schema(description = "$column.columnComment" #if($column.required), required = true #end)
    private $column.javaType $column.javaField;

    #end
    #end
#end

}
